<?php

namespace ContainerNTlM9IA;


use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_WHvkLdeService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.wHvkLde' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.wHvkLde'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'blog' => ['privates', '.errored..service_locator.wHvkLde.App\\Entity\\BlogPost', NULL, 'Cannot autowire service ".service_locator.wHvkLde": it needs an instance of "App\\Entity\\BlogPost" but this type has been excluded in "config/services.yaml".'],
            'entityManager' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', true],
            'imageService' => ['privates', 'App\\Service\\ImageService', 'getImageServiceService', true],
            'logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
            'repo' => ['services', 'App\\Repository\\BlogPostRepository', 'getBlogPostRepositoryService', true],
            'security' => ['privates', 'security.helper', 'getSecurity_HelperService', true],
            'serializer' => ['privates', 'serializer', 'getSerializerService', true],
            'validator' => ['privates', 'validator', 'getValidatorService', true],
        ], [
            'blog' => 'App\\Entity\\BlogPost',
            'entityManager' => '?',
            'imageService' => 'App\\Service\\ImageService',
            'logger' => '?',
            'repo' => 'App\\Repository\\BlogPostRepository',
            'security' => '?',
            'serializer' => '?',
            'validator' => '?',
        ]);
    }
}
